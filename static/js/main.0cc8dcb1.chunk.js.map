{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/movies.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","Title","Poster","imdbID","Plot","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","getMovie","movTitle","a","fetch","response","ok","Error","statusText","json","FindMovie","addMovie","setError","error","useState","query","setQuery","setMovie","htmlFor","type","id","placeholder","classNames","input","value","onChange","target","onClick","then","data","App","setMovies","length","clear","newMovie","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cc8dcb1.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  Title,\n  Poster,\n  imdbID,\n  Plot,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {Plot}\n        <br />\n        <a href={`https://www.imdb.com/title/${imdbID}`}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  Title: PropTypes.string.isRequired,\n  Poster: PropTypes.string.isRequired,\n  imdbID: PropTypes.string.isRequired,\n  Plot: PropTypes.string,\n};\n\nMovieCard.defaultProps = {\n  Plot: '',\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=b83e4f60';\n\nexport const getMovie = async(movTitle) => {\n  const response = await fetch(`${BASE_URL}&t=${movTitle}`);\n\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/movies';\n\nexport const FindMovie = ({ addMovie, setError, error }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState('');\n\n  const handleSearch = ({ target }) => {\n    setError(false);\n    setQuery(target.value);\n  };\n\n  const searchBtnHandler = () => {\n    getMovie(query).then((data) => {\n      if (data.Error) {\n        setError(true);\n        setMovie(null);\n\n        return;\n      }\n\n      setMovie(data);\n    });\n  };\n\n  const addBtnHandler = () => {\n    if (movie) {\n      addMovie(movie);\n      setMovie('');\n      setQuery('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames({\n                input: true,\n                'is-danger': error,\n              })}\n              value={query}\n              onChange={handleSearch}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchBtnHandler}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addBtnHandler}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n\n        {movie && (\n          <MovieCard {...movie} />\n        )}\n\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n  setError: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n\n  const addMovie = (newMovie) => {\n    if (movies.some(movie => movie.imdbID === newMovie.imdbID)\n      || error) {\n      return;\n    }\n\n    setMovies(movie => [...movie, newMovie]);\n  };\n\n  const clearMovies = () => {\n    setMovies([]);\n  };\n\n  return (\n    <div className=\"page\">\n\n      <div className=\"page-content\">\n        {movies.length ? (\n          <MoviesList movies={movies} clear={clearMovies} />\n        ) : (\n          <div className=\"panel-heading\">No movies</div>\n        )}\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          setError={setError}\n          error={error}\n        />\n      </div>\n\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}